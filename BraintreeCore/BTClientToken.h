#import <Foundation/Foundation.h>
#import "BTErrors.h"
#import "BTNullability.h"

BT_ASSUME_NONNULL_BEGIN

@class BTAPIResponseParser;

extern NSString *const BTClientTokenKeyVersion;

typedef NS_ENUM(NSInteger, BTClientPayPalEnvironment) {
    BTPayPalEnvironmentLive = 1,
    BTPayPalEnvironmentMock = 2,
};

typedef NS_ENUM(NSInteger, BTClientTokenError) {
    BTClientTokenErrorUnknown = 0,
    BTClientTokenErrorInvalid,
};

extern NSString * const BTClientTokenErrorDomain;
extern NSString *const BTClientTokenKeyAuthorizationFingerprint;
extern NSString *const BTClientTokenKeyConfigURL;

@interface BTClientToken : NSObject <NSCoding, NSCopying>

/// Parser to digest the token data
@property (nonatomic, readonly, strong) BTAPIResponseParser *clientTokenParser;
/// The extracted authorization fingerprint
@property (nonatomic, readonly, copy) NSString *authorizationFingerprint;
/// The extracted configURL
@property (nonatomic, readonly, strong) NSURL *configURL;

#pragma mark -

//// Initialize a client token with a client token string generated by a Braintree Server SDK.
- (instancetype)initWithClientToken:(NSString *)clientToken error:(NSError **)error NS_DESIGNATED_INITIALIZER;

- (BT_NULLABLE instancetype)init __attribute__((unavailable("Please use initWithClientToken:error: instead.")));

- (NSString *)originalValue;

@end

BT_ASSUME_NONNULL_END
